# Прочитати дійсну матрицю розміром n * n, n - непарне. Надрукувати елементи матриці за таким шаблоном: починаючи з
# центрального елемента, вправо, по спіралі за годинниковою стрілкою. Приклад: для матриці 3 * 3,
# що містить елементи від 1 до 9, починаючи з першого рядка, результатом буде: 5 6 9 8 7 4 1 2 3

def increment_cycle(duration: int, step: int) -> None:  # приріст сторони
    global last  # доступаємося до глобальної змінної last
    for _ in range(duration):  # наростаюча сторона спіралі
        last += step  # ±1 - переміщення по горизонталі, ±n - по вертикалі
        output.append(matrix[last])  # додає елемент спіралі


if __name__ == "__main__":
    if test := False:  # the walrus operator, ініціалізація в виразі
        n = 3
        matrix = [i for i in range(1, n ** 2 + 1)]  # тест даний в умові
    else:
        n = int(input("Введіть непарне n: "))
        print("Введіть матрицю [n*n] в рядку:\t", end='')
        matrix = list(map(float, input().split()))  # дійсна матриця, представлена одновимірним масивом

    print("Матриця:")
    for i, el in enumerate(matrix, start=1):  # enumerate створює кортежі (номер, елемент)
        print(f"{el:>4}", end=' ' if i % n else '\n')  # форматований вивід

    last = round(n ** 2 / 2)  # бігаюча змінна індексів, ініціалізується як центральний індекс
    # python використовує bankers rounding, яке округляє до найближчого парного, тому 4.5 ~ 4
    output = [matrix[last]]  # додаємо в список центральний елемент матриці першим
    # алгоритм: 1-ий цикл: вправо 1, вниз 1, 2-ий цикл: вліво 2, вверх 2...
    for i in range(1, n):
        j = 1 if i & 1 else -1  # i & 1 те саме що i % 2, j = 1 - вправо або вниз на i, -1 - вліво або вверх на i
        increment_cycle(i, j)  # приріст сторони квадрата вправо або вліво
        increment_cycle(i, j * n)  # приріст сторони квадрата вниз або вверх
    increment_cycle(n - 1, 1)  # приріст верхньої горизонталі n - 1 вправо

    print("Результат:\n", *output)  # надрукувати розархівований список

# 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
